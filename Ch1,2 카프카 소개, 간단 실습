# Ch1,2

## Ch1 - 카프카 소개

### 카프카의 특징

- 높은 처리량 - 배치 처리로 네트워크 통신 횟수 최소화, 동일 시간 내에 더 많은 데이터 전송 + 파티션 통해 동일 목적의 데이터를 여러 파티션에 분배, 데이터 병렬 처리
- 확장성 - 브로커 개수 늘려 Scale-out, 브로커 개수 줄여 Scale-in
- 영속성 - 메모리가 아닌 파일 시스템에 저장, 페이지 캐시 영역을 메모리에 따로 생성하여 사용.
- 고가용성 - 2대 이상의 브로커에 데이터 복제하여 장애 발생하더라도 지속적으로 데이터 처리 가능

### 데이터 레이크 아키텍쳐

레거시 데이터 수집 플랫폼 → 람다 아키텍쳐 → 카파 아키텍쳐

- 람다

배치 레이어: 배치 데이터를 모아 일괄 처리

서빙 레이어: 가공된 데이터 사용자, 서비스 애플리케이션이 사용할 수 있도록 데이터 저장

스피드 레이어: 실시간 분석 용도. 카프카가 여기에 위치

: 레이어가 2개로 나뉘어 데이터를 분석, 처리하는 데에 필요한 로직이 각각에 존재해야 하고, 융합 시 유연하지 못한 파이프라인 생성되는 단점

- 카파

배치 레이어 제거하고 모두 스피드 레이어로. 모든 종류의 데이터를 스트림 처리

- 미래엔?

스트리밍 데이터 레이크 : 오직 스피드 레이어만. 카프카가 단계별 저장소를 가질 수 있도록 하여 단일 진실 공급원(SSOT, Single Source Of Truth)이 되도록.

## Ch2 - 간단 실습

- 인스턴스 구성 등 책의 내용 그대로 따라감

### 힙 메모리 설정

기본값: 카프카 브로커 1G, 주키퍼 512MB

`KAFKA_HEAP_OPTS="-Xmx400m Xms400m"` 로 환경변수 설정 후 `.bashrc` 에 추가 후 `source` 로 적용

KAFKA_HEAP_OPTS는 kafka-server-start.sh 내에서 불러옴

### 카프카 브로커 실행 옵션 설정

`config/server.properties` 의 `advertised.listeners=PLAINTEXT:/[HOST IP]:9092` 설정
→ 카프카 클라이언트 또는 카프카 커맨드 라인 툴에서 접속할 때 사용하는 정보

### 주키퍼, 카프카 브로커 실행 및 로그 확인

-daemon : 백그라운드 or 포어그라운드

주키퍼 실행

`bin/zookeeper-server-start.sh -daemon config/zookeeper.properties`

카프카 브로커 실행

`bin/kafka-server-start.sh -daemon config/server.properties`

로그 확인

`tail -f logs/server.log`

jps 실행 모습

![https://s3.us-west-2.amazonaws.com/secure.notion-static.com/f7c98912-a94d-4328-bd48-48a4a90dabec/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210718%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210718T103638Z&X-Amz-Expires=86400&X-Amz-Signature=c97d1642ad9e401947ab7bb25ae055a9f2dbfe77ff6e67ecf0bc1a01fff24739&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22](Ch1,2%20e33bad954d884a3dbc88ad56bf505133/Untitled.png)

### 로컬 컴퓨터에서 카프카와 통신 - 카프카 커맨드 라인 툴

- 각종 쉘 스크립트 통해 카프카와 통신
- 토픽 생성

`bin/kafka-topics.sh --create --bootstrap-server [HOST]:9092 --topic [TOPIC]`

- 토픽 생성 시 각종 옵션

`bin/kafka-topics.sh --create --bootstrap-server [HOST]:9092 --partitions 3 \
--replication-factor 1 --config retention.ms=172800000 --topic [TOPIC]`

- 토픽 리스트 조회

`bin/kafka-topics.sh --bootstrap-server [HOST]:9092 --list`

![https://s3.us-west-2.amazonaws.com/secure.notion-static.com/5fb58e04-a33f-4996-add6-8971c4fa70f6/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210718%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210718T103825Z&X-Amz-Expires=86400&X-Amz-Signature=3f9a75f0cddfe94e0eab36fd8dcdcfde43e492a4c48f44f519feb388ebba1f9a&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22](Ch1,2%20e33bad954d884a3dbc88ad56bf505133/Untitled%201.png)

- 토픽 상세 조회

`bin/kafka-topics.sh --bootstrap-server [HOST]:9092 --describe --topic [TOPIC]` 

![https://s3.us-west-2.amazonaws.com/secure.notion-static.com/287586bc-61f9-4fdc-8608-eaf292c56712/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210718%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210718T103840Z&X-Amz-Expires=86400&X-Amz-Signature=36647ef478381a389cbd823d115bfde9ccd6328925acb1d8ea292ebc8a8f4099&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22](Ch1,2%20e33bad954d884a3dbc88ad56bf505133/Untitled%202.png)

- 토픽 옵션 수정

파티션 개수 변경 : kafka-topics.sh  기타 옵션 : kafka-configs.sh

hello.kafka 토픽의 파티션 4개로 변경 후 describe

`bin/kafka-topics.sh --bootstrap-server [HOST]:9092 --topic hello.kafka --alter --partitions 4`

`bin/kafka-topics.sh --bootstrap-server [HOST]:9092 --topic hello.kafka --describe`

![https://s3.us-west-2.amazonaws.com/secure.notion-static.com/1b16c29e-0652-49fe-8c2c-a1bd8a7cdf7c/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210718%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210718T103853Z&X-Amz-Expires=86400&X-Amz-Signature=881dc0e05d8a28b2487016c06cc400fe8180ae5bc583b7b4951211b2ff100978&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22](Ch1,2%20e33bad954d884a3dbc88ad56bf505133/Untitled%203.png)

retention.ms 옵션 변경

`bin/kafka-configs.sh --bootstrap-server [HOST]:9092 --entity-type topics --entity-name [TOPIC] --alter --add-config retention.ms=86400000`

- 콘솔 프로듀서

`bin/kafka-console-producer.sh --bootstrap-server [HOST]:9092 --topic [TOPIC]`

with Key값

`bin/kafka-console-producer.sh --bootstrap-server [HOST]:9092 --topic [TOPIC] --property "parse.key=true" --property "key.separator=:"`

- 콘솔 컨슈머 (with Key값)

`bin/kafka-console-consumer.sh --bootstrap-server [HOST]:9092 --topic [TOPIC] 
( --property print.key=true --property key.separator="-" ) --group [GROUP] --from-beginning`

![https://s3.us-west-2.amazonaws.com/secure.notion-static.com/7713e3b5-34d1-4247-a6aa-db03c5defdc5/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210718%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210718T103906Z&X-Amz-Expires=86400&X-Amz-Signature=5f986bd139803e10431c66a7e4079840e0396e096cbd3d4fca9f54ca8cd06f03&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22](Ch1,2%20e33bad954d884a3dbc88ad56bf505133/Untitled%204.png)

- kafka-consumer-groups.sh

컨슈머 그룹 조회

`bin/kafka-consumer-groups.sh --bootstrap-server [HOST]:9092 --list`

`bin/kafka-consumer-groups.sh --bootstrap-server [HOST]:9092 --group [GROUP] --describe`

![https://s3.us-west-2.amazonaws.com/secure.notion-static.com/e4f7311e-a868-4da2-8428-fd1430eaec11/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210718%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210718T103923Z&X-Amz-Expires=86400&X-Amz-Signature=39fa1b9197de2b1b0701602b21063c9a6ea630d1f34265510faa2c9155a15dd6&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22](Ch1,2%20e33bad954d884a3dbc88ad56bf505133/Untitled%205.png)

- kafka-verifiable-producer, consumer.sh

테스트용 String 메시지 주고받기

`bin/kafka-verifiable-producer.sh --bootstrap-server [HOST]:9092 --max-messages 10 --topic [TOPIC]`

`bin/kafka-verifiable-consumer.sh --bootstrap-server [HOST]:9092 --max-messages 10 --topic [TOPIC] --group-id [GROUP]`

   Producer

![https://s3.us-west-2.amazonaws.com/secure.notion-static.com/0df36149-7112-4bf3-8172-0bd81d2f6643/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210718%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210718T103937Z&X-Amz-Expires=86400&X-Amz-Signature=fc59c0cc5d029a98fd3af2aae6b02c95988013b1a8364cea51bc840243d8ce6e&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22](Ch1,2%20e33bad954d884a3dbc88ad56bf505133/Untitled%206.png)

Consumer

![https://s3.us-west-2.amazonaws.com/secure.notion-static.com/7dc0d0f8-b790-4092-a557-4b0210de6851/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210718%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210718T103946Z&X-Amz-Expires=86400&X-Amz-Signature=c8eaa1e4403eb2f87b7d6b46c10b66d65ab5e283be9513c560cb38ad99703436&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22](Ch1,2%20e33bad954d884a3dbc88ad56bf505133/Untitled%207.png)

- bootstrap-server?
→ 카프카 버전 2.2 이후로 주키퍼 대신 카프카를 통해 토픽과 관련된 명령 실행
